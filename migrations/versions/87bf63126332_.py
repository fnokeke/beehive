"""empty message

Revision ID: 87bf63126332
Revises: None
Create Date: 2017-02-20 04:21:30.497712

"""

# revision identifiers, used by Alembic.
revision = '87bf63126332'
down_revision = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('screen_unlock_config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=True),
    sa.Column('app_id', sa.String(length=50), nullable=True),
    sa.Column('time_limit', sa.Integer(), nullable=True),
    sa.Column('unlocked_limit', sa.Integer(), nullable=True),
    sa.Column('vibration_strength', sa.String(length=10), nullable=True),
    sa.Column('show_stats', sa.Boolean(), nullable=True),
    sa.Column('enable_user_pref', sa.Boolean(), nullable=True),
    sa.Column('start_time', sa.String(length=50), nullable=True),
    sa.Column('end_time', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['code'], ['experiment.code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('general_notification_config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=True),
    sa.Column('title', sa.String(length=50), nullable=True),
    sa.Column('content', sa.String(length=50), nullable=True),
    sa.Column('app_id', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['code'], ['experiment.code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('calendar_config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('event_num_limit', sa.String(length=5), nullable=True),
    sa.Column('event_time_limit', sa.String(length=10), nullable=True),
    sa.Column('code', sa.String(length=10), nullable=True),
    sa.ForeignKeyConstraint(['code'], ['experiment.code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vibration_config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=True),
    sa.Column('app_id', sa.String(length=50), nullable=True),
    sa.Column('time_limit', sa.Integer(), nullable=True),
    sa.Column('open_limit', sa.Integer(), nullable=True),
    sa.Column('vibration_strength', sa.String(length=10), nullable=True),
    sa.Column('show_stats', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['code'], ['experiment.code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('daily_reminder',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('reminder_time', sa.String(length=10), nullable=True),
    sa.ForeignKeyConstraint(['code'], ['experiment.code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rescuetime_config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=True),
    sa.Column('productive_duration', sa.String(length=50), nullable=True),
    sa.Column('distracted_duration', sa.String(length=50), nullable=True),
    sa.Column('productive_msg', sa.String(length=50), nullable=True),
    sa.Column('distracted_msg', sa.String(length=50), nullable=True),
    sa.Column('show_stats', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['code'], ['experiment.code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table(u'calendar_setting')
    op.drop_table(u'notification_setting')
    op.drop_table(u'vibration_stats')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table(u'vibration_stats',
    sa.Column(u'id', sa.INTEGER(), nullable=False),
    sa.Column(u'code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column(u'user_id', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column(u'device_id', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column(u'total_seconds', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column(u'total_unlocks', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column(u'time_spent', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column(u'time_open', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column(u'created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint([u'code'], [u'experiment.code'], name=u'vibration_stats_code_fkey'),
    sa.PrimaryKeyConstraint(u'id', name=u'vibration_stats_pkey')
    )
    op.create_table(u'notification_setting',
    sa.Column(u'id', sa.INTEGER(), nullable=False),
    sa.Column(u'title', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column(u'content', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column(u'app_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column(u'created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column(u'code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint([u'code'], [u'experiment.code'], name=u'notification_setting_code_fkey'),
    sa.PrimaryKeyConstraint(u'id', name=u'notification_setting_pkey')
    )
    op.create_table(u'calendar_setting',
    sa.Column(u'id', sa.INTEGER(), nullable=False),
    sa.Column(u'event_time_limit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column(u'event_num_limit', sa.VARCHAR(length=5), autoincrement=False, nullable=True),
    sa.Column(u'created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column(u'code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint([u'code'], [u'experiment.code'], name=u'calendar_setting_code_fkey'),
    sa.PrimaryKeyConstraint(u'id', name=u'calendar_setting_pkey')
    )
    op.drop_table('rescuetime_config')
    op.drop_table('daily_reminder')
    op.drop_table('vibration_config')
    op.drop_table('calendar_config')
    op.drop_table('general_notification_config')
    op.drop_table('screen_unlock_config')
    ### end Alembic commands ###
